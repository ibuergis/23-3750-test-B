{
	"info": {
		"_postman_id": "524cca39-5d79-4e42-ab4b-d5f22cb2671d",
		"name": "Regression Testing",
		"description": "# About this collection\n\nThis collection helps ensure your API continues to work as expected after updates or changes. It contains sample requests for a series of tests that validate different aspects of an API, including:\n\n1. **Status code verification:** We'll check if the API returns the expected status codes for various requests, ensuring reliability and proper error handling.\n2. **JSON schema verification:** We'll make sure the JSON response conforms to a specified JSON Schema, ensuring API contracts are honored.\n3. **Response time verification:** We'll verify that the API's response time is within the acceptable range, providing a smooth user experience and optimizing performance.\n4. **Response body verification:** We'll validate the structure and content of the response body for accuracy, ensuring the integrity of the data and preventing potential issues downstream.\n5. **Header verification:** We'll confirm the presence and correct values of specific headers in the response, enabling secure and well-structured communication between your app and its users.\n    \n\n## **Using this collection**\n\n**Step 1:** Send the sample requests and view the response and test results.\n\n**Step 2:** Replace the sample request URLs with your desired API endpoints.\n\n**Step 3:** Customize the tests in the \"Tests\" tab if needed. Don't forget to save your changes.\n\n**Step 4:** Run the collection by selecting \"Run\".\n\n### Resources\n\n[Scripting in Postman](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/)\n\n[Test script examples](https://learning.postman.com/docs/writing-scripts/script-references/test-examples/)\n\n[Postman Sandbox API reference](https://learning.postman.com/docs/sending-requests/grpc/postman-sandbox-api/#writing-assertions)\n\n[Using the Collection Runner](https://learning.postman.com/docs/collections/running-collections/intro-to-collection-runs/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26353924",
		"_collection_link": "https://martian-moon-496829.postman.co/workspace/86778bfd-26f2-47f9-ada1-9fdf19155d76/collection/26353924-524cca39-5d79-4e42-ab4b-d5f22cb2671d?action=share&source=collection_link&creator=26353924"
	},
	"item": [
		{
			"name": "Tasks",
			"item": [
				{
					"name": "all tasks",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "specific existing task",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/tasks/1",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "specific nonexisting task",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"burger\",\r\n    \"author\": \"masterGuy\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/tasks/15",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"15"
							]
						}
					},
					"response": []
				},
				{
					"name": "ID that cant be a number",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/tasks/notanumber",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"notanumber"
							]
						}
					},
					"response": []
				},
				{
					"name": "create task only title defined",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"i want error\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "create task nothing defined",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "create task only author defined",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"author\": \"i want error\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "create task both defined",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"this\",\r\n    \"author\": \"will work\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit task",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"this\",\r\n    \"author\": \"will work\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/tasks/10",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"10"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit task wrong id",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"this\",\r\n    \"author\": \"wont work\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/tasks/45490",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"45490"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit task id not number",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"this\",\r\n    \"author\": \"wont work\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/tasks/lmao",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"lmao"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete task id not number Copy",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/tasks/lmao",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"lmao"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete task",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/tasks/8",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete task Copy wrong id",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/tasks/345",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks",
								"345"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authorization",
			"item": [
				{
					"name": "login user doesnt exist",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"chickenBro\",\r\n    \"password\": \"itsARandomPassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/login",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login user password wrong",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"ibuergis\",\r\n    \"password\": \"wrongPassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/login",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login data correct",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"ibuergis\",\r\n    \"password\": \"itsARandomPassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/login",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "verify cookie",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"ibuergis\",\r\n    \"password\": \"itsARandomPassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/verify",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete cookies",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"ibuergis\",\r\n    \"password\": \"itsARandomPassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/logout",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"logout"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://postman-echo.com"
		}
	]
}